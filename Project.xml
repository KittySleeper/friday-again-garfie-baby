<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://lime.openfl.org/project/1.0.4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://lime.openfl.org/project/1.0.4 http://lime.openfl.org/xsd/project-1.0.4.xsd">

	<!-- _________________________ Application Settings _________________________ -->

	<app title="friday again garfie baby" file="Funkin" main="funkin.backend.Main" version="0.1.0" company="swordcube" />

	<!--The flixel preloader is not accurate in Chrome. You can use it regularly if you embed the swf into a html file
		or you can set the actual size of your file manually at "FlxPreloaderBase-onUpdate-bytesTotal"-->
	<app preloader="flixel.system.FlxPreloader" />

	<!--Minimum without FLX_NO_GAMEPAD: 11.8, without FLX_NO_NATIVE_CURSOR: 11.2-->
	<set name="SWF_VERSION" value="11.8" />

	<!-- ____________________________ Window Settings ___________________________ -->

	<!--These window settings apply to all targets-->
	<window width="1280" height="720" fps="144" background="#000000" hardware="true" vsync="false" />

	<!--HTML5-specific-->
	<window if="html5" resizable="true" />

	<!--Desktop-specific-->
	<window if="desktop" orientation="landscape" fullscreen="false" resizable="true" />

	<!--Mobile-specific-->
	<window if="mobile" orientation="landscape" fullscreen="true" width="0" height="0" />

	<!-- _____________________________ Path Settings ____________________________ -->

	<set name="BUILD_DIR" value="export/debug" if="debug" />
	<set name="BUILD_DIR" value="export/release" unless="debug" />

	<source path="source" />

	<!-- ____________________________ Funkin Defines ____________________________ -->

	<!--
		Comment/delete this line below to disable all scripting
		Or compile with the NO_SCRIPTING define, like so:
		
		lime test platform -DNO_SCRIPTING
	-->
	<define name="SCRIPTING_ALLOWED" unless="NO_SCRIPTING" />

	<!--
		Comment/delete this line below to disable HScript
		Or compile with the NO_HSCRIPT define, like so:

		lime test platform -DNO_HSCRIPT
	-->
	<define name="HSCRIPT_ALLOWED" if="SCRIPTING_ALLOWED" unless="NO_HSCRIPT" />

	<!--
		Comment/delete this line below to disable LuaJIT scripts
		Or compile with the NO_LUA define, like so:

		lime test platform -DNO_LUA
	-->
	<define name="LUA_ALLOWED" if="SCRIPTING_ALLOWED" unless="NO_LUA" />

	<!--
		Comment/delete this line below to disable the crash handler
		Or compile with the NO_CRASH_HANDLER define, like so:
		
		lime test platform -DNO_CRASH_HANDLER
	-->
	<define name="CRASH_HANDLER" unless="NO_CRASH_HANDLER" />

	<!--
		Comment/delete this line below to disable the ability to
		return to the main menu after a crash (Windows only)

		Or compile with the NO_WINDOWS_CRASH_HANDLER define, like so:

		lime test platform -DNO_WINDOWS_CRASH_HANDLER
	-->
	<define name="WINDOWS_CRASH_HANDLER" unless="NO_WINDOWS_CRASH_HANDLER" />

	<!--
		Comment/delete this line below to disable crash log saving
		Or compile with the NO_SAVE_CRASH_LOGS define, like so:

		lime test platform -DNO_SAVE_CRASH_LOGS
	-->
	<define name="SAVE_CRASH_LOGS" if="CRASH_HANDLER" unless="NO_SAVE_CRASH_LOGS" />

	<!-- _____________________________ Path Settings ____________________________ -->

	<assets path="assets" type="template" />
	<assets path="mods" type="template" />
	<assets path="tools" type="template" />

	<section if="desktop">
		<assets path="alsoft.ini" rename="plugins/alsoft.ini" type="text" if="windows"/>
		<assets path="alsoft.ini" rename="plugins/alsoft.conf" type="text" unless="windows"/>
	</section>

	<!-- _______________________________ Libraries ______________________________ -->

	<!-- HaxeFlixel -->
	<haxelib name="flixel" />
	<haxelib name="flixel-addons" />
	<haxelib name="flixel-controls" />

	<!-- Useful Libraries -->
	<haxelib name="flxanimate" />

	<haxelib name="thx.core" />
	<haxelib name="thx.semver" />
	<haxelib name="json2object" />

	<section if="SCRIPTING_ALLOWED">
		<!-- The core library for Lua scripting -->
		<haxelib name="linc_luajit" if="LUA_ALLOWED" />

		<!-- The wrapper library for OOP Lua -->
		<haxelib name="lscript" if="LUA_ALLOWED" />

		<!-- The core library for Haxe scripting -->
		<haxelib name="hscript-improved" if="HSCRIPT_ALLOWED" />
	</section>

	<!-- ______________________________ Haxedefines _____________________________ -->

	<!--Remove the legacy health system-->
	<haxedef name="FLX_NO_HEALTH" />

	<!--Allow for easier support of custom asset loading-->
	<haxedef name="FLX_CUSTOM_ASSETS_DIRECTORY" value="assets" />
	<haxedef name="FLX_CUSTOM_RUNTIME_ASSETS_DIRECTORY" />

	<!--Optimise inputs, be careful you will get null errors if you don't use conditionals in your game-->
	<haxedef name="FLX_NO_MOUSE" if="mobile" />
	<haxedef name="FLX_NO_KEYBOARD" if="mobile" />
	<haxedef name="FLX_NO_TOUCH" if="desktop" />

	<!--Disable the Flixel core focus lost screen-->
	<haxedef name="FLX_NO_FOCUS_LOST_SCREEN" />

	<!-- Release-build specific defines -->
    <section unless="debug">
        <!--Disable the Flixel core debugger. Automatically gets set whenever you compile in release mode!-->
        <haxedef name="FLX_NO_DEBUG" />
        
        <!--Enable this for Nape release builds for a serious peformance improvement-->
        <haxedef name="NAPE_RELEASE_BUILD" />

        <!-- Crash tracing on release builds -->
		<section if="CRASH_HANDLER">
			<haxedef name="HXCPP_CHECK_POINTER" />
			<haxedef name="HXCPP_STACK_LINE" />
			<haxedef name="HXCPP_STACK_TRACE" />
			<haxedef name="HXCPP_CATCH_SEGV" />
			<haxedef name="openfl-enable-handle-error" />
		</section>
    </section>

    <!-- Self explanatory i'd say -->
    <haxedef name="no-deprecation-warnings" />

	<!-- Haxe 4.3.0+: Enable pretty syntax errors and stuff. -->
	<!-- pretty (haxeflixel default), indent, classic (haxe compiler default) -->
	<haxedef name="message.reporting" value="pretty" />

	<!-- Better error reporting for HScript -->
	<haxedef name="hscriptPos" if="HSCRIPT_ALLOWED" />

	<!-- Fixes linux compilation?? -->
	<haxedef name="NO_PRECOMPILED_HEADERS" />

	<!-- _________________________________ Custom _______________________________ -->

	<!--Allows unused classes to be compiled, useful for scripting-->
    <haxeflag name="-dce" value="no" />

    <!--Include every class into the executable, useful for scripting -->
    <haxeflag name="--macro" value="funkin.backend.macros.IncludeMacro.build()" />

    <!-- Fix compiling issues with local libraries -->
    <setenv name="HAXEPATH" value="./"/>

	<!-- Application Icons -->
	<icon path="art/icons/16x.png" size="16" />

	<icon path="art/icons/32x.png" size="24" />
	<icon path="art/icons/32x.png" size="32" />

	<icon path="art/icons/64x.png" size="40" />
	<icon path="art/icons/64x.png" size="48" />
	<icon path="art/icons/64x.png" size="64" />

	<icon path="art/icons/256x.png" size="96"  />
	<icon path="art/icons/256x.png" size="128"  />
	<icon path="art/icons/256x.png" size="196"  />
	<icon path="art/icons/256x.png" size="256"  />
	<icon path="art/icons/256x.png" size="512"  />
	<icon path="art/icons/256x.png" size="768"  />
	<icon path="art/icons/256x.png" size="1024"  />
</project>