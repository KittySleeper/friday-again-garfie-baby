function reloadAssets(_) {
    Cache.clearAll();
    Paths.reloadContent();
    GlobalScript.reloadScripts();
}

function onUpdate(dt) {
    if(Controls.instance.justPressed.check(Control.DEBUG_RELOAD)) {
        if(FlxG.keys.pressed.M && PlayState.lastParams != null) {
            PlayState.lastParams.minimalMode = true;
            PlayState.lastParams.scriptsAllowed = true;
        }
        if(FlxG.keys.pressed.SHIFT) {
            trace("Reloading content and state...");
            FlxG.inputs.onStateSwitch();
            FlxG.signals.preStateCreate.addOnce(reloadAssets);

            final constructor = FlxG.state._constructor;
            FlxG.game._nextState = constructor;
            FlxG.game.switchState();
        } else {
            trace("Reloading state normally...");
            FlxG.resetState();
        }
    }
    if(Controls.instance.justPressed.check(Control.EMERGENCY)) {
        // if(FlxG.game._state != null) {
        //     try {
        //         FlxG.game._state.destroy();
        //         FlxG.game._state = null;
        //     }
        //     catch(e) {
        //         FlxG.game._state = null;
        //         trace("Failed to destroy state: " + e);
        //     }
        // }
        // try catches are broken in hscript-improved! fun!
        FlxG.game._state = new MainMenuState();
        FlxG.game._state.create();
        FlxG.game._state.createPost();
        FlxG.game._nextState = null;
    }
}